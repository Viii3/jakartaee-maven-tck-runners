<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>dsol-platform-tck</artifactId>
    <packaging>pom</packaging>

    <name>TCK: Run Jakarta pages-debugging-other TCK</name>
    <description>Aggregates dependencies and runs the Pages Debugging Support (and theoretically other languages) TCK on Payara</description>

    <properties>
        <ant.home>${project.build.directory}/apache-ant-${ant.version}</ant.home>
        <ant.zip.url>https://archive.apache.org/dist/ant/binaries/apache-ant-${ant.version}-bin.zip</ant.zip.url>

        <tck.home>${project.build.directory}</tck.home>

        <jacoco.includes>org/glassfish/**\:com/sun/enterprise/**</jacoco.includes>

        <ant.version>1.10.15</ant.version>

        <port.admin>14848</port.admin>
        <port.derby>11527</port.derby>
        <port.http>18080</port.http>
        <port.https>18181</port.https>
        <port.jms>17676</port.jms>
        <port.jmx>18686</port.jmx>
        <port.orb>13700</port.orb>
        <port.orb.mutual>13920</port.orb.mutual>
        <port.orb.ssl>13820</port.orb.ssl>
        <port.harness.log>12000</port.harness.log>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>jakarta-pages-debugging-other-tck</artifactId>
            <version>2.0.0</version>
            <type>zip</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <version>1.13.0</version>
                <executions>
                    <execution>
                        <id>download-ant</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipTests}</skip>
                    <url>${ant.zip.url}</url>
                    <unpack>true</unpack>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <configuration>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>unpack-tck</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeArtifactIds>jakarta-pages-debugging-other-tck</includeArtifactIds>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                        <version>${ant.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <configuration>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-tck-and-payara</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />

                                <limit maxwait="60">
                                    <exec executable="${payara.asadmin}" dir="${payara.home}/bin">
                                        <arg value="delete-domain"/>
                                        <arg value="domain1" />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                    <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                        <arg value="create-domain"/>
                                        <arg value="--domainproperties=domain.adminPort=${port.admin}:domain.instancePort=${port.http}:http.ssl.port=${port.https}:jms.port=${port.jms}:domain.jmxPort=${port.jmx}:orb.listener.port=${port.orb}:orb.ssl.port=${port.orb.ssl}:orb.mutualauth.port=${port.orb.mutual}" />
                                        <arg value="--user=admin" />
                                        <arg value="--nopassword" />
                                        <arg value="domain1" />
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>

                                    <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                        <arg value="start-domain"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>

                                    <if>
                                        <isset property="jacoco.version" />
                                        <then>
                                            <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                                <arg value="create-jvm-options" />
                                                <arg value="--port=${port.admin}" />
                                                <arg value="&quot;-javaagent\:${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar=destfile=${project.build.directory}/jacoco-it.exec,includes=${jacoco.includes}&quot;" />
                                                <env key="AS_JAVA" value="${java.home}"/>
                                            </exec>
                                        </then>
                                    </if>
                                    <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                        <arg value="stop-domain"/>
                                        <arg value="domain1"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>

                                    <replace file="${payara.home}/glassfish/domains/domain1/config/default-web.xml">
                                        <replacetoken><![CDATA[<servlet-class>org.glassfish.wasp.servlet.JspServlet</servlet-class>]]></replacetoken>
                                        <replacevalue><![CDATA[<servlet-class>org.glassfish.wasp.servlet.JspServlet</servlet-class>
                                    <init-param>
                                        <param-name>dumpSmap</param-name>
                                        <param-value>true</param-value>
                                    </init-param>
                                  ]]></replacevalue>
                                    </replace>
                                </limit>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>configure-tck-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                <limit maxwait="20">
                                    <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                        <arg value="start-domain"/>
                                        <arg value="--suspend" if:set="glassfish.suspend"/>
                                        <env key="AS_JAVA" value="${java.home}"/>
                                    </exec>
                                </limit>

                                <exec executable="${payara.asadmin}" dir="${payara.home}/bin" failonerror="true">
                                    <arg value="deploy"/>
                                    <arg value="--port=${port.admin}" />
                                    <arg value="${tck.home}/testclient.war" />
                                    <env key="AS_JAVA" value="${java.home}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>

                    <execution>
                        <id>run-tck-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />

                                <get src="http://localhost:${port.http}/testclient/Hello.jsp" dest="${project.build.directory}/hello.html"/>

                                <exec executable="${java.home}/bin/java" outputproperty="verifyResult" resultproperty="testResult">
                                    <arg value="-cp" />
                                    <arg value="${project.build.directory}/debugging-tck-2.0.0.jar" />
                                    <arg value="VerifySMAP" />
                                    <arg value="${payara.home}/glassfish/domains/domain1/generated/jsp/testclient/org/apache/jsp/Hello_jsp.class.smap" />
                                </exec>

                                <exec executable="${payara.asadmin}" dir="${payara.home}/bin">
                                    <arg value="stop-domain" />
                                    <env key="AS_JAVA" value="${java.home}"/>
                                </exec>

                                <echo message="${verifyResult}"/>

                                <if>
                                    <not>
                                        <contains string="${verifyResult}" substring="is a correctly formatted SMAP"/>
                                    </not>
                                    <then>
                                        <echo message="Running tests failed." />
                                        <loadfile property="contents" srcFile="${payara.home}/glassfish/domains/domain1/logs/server.log" />
                                        <fail status="${testResult}" message="${contents}" />
                                    </then>
                                </if>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>