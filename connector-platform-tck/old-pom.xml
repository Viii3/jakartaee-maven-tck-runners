<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2025 Contributors to the Eclipse Foundation.
    Copyright (c) 2024 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>connector-platform-tck</artifactId>

    <properties>
        <glassfish.lib.dir>${payara.home}/glassfish/lib</glassfish.lib.dir>
        <tck.version>11.0.1-SNAPSHOT</tck.version>
        <whitebox.directory>target/whiteboxes</whitebox.directory>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.tck</groupId>
                <artifactId>artifacts-bom</artifactId>
                <version>${tck.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- The actual TCK containing the tests -->
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>connector</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- TCK dependencies-->
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-common</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-javatest</artifactId>
        </dependency>

        <!-- Junit5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-container-test-spi</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>2-copy-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>arquillian-protocol-lib.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                    <execution>
                        <id>3-install-whiteboxes</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox</artifactId>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>whitebox.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>annotated</artifactId>
                                    <version>${tck.version}</version>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-anno_no_md.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>ibanno</artifactId>
                                    <version>${tck.version}</version>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-ibanno_no_md.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>mdcomplete</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-mdcomplete.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>mixedmode</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-mixedmode.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>multianno</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-multianno.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-notx</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-notx.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-notx-param</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-notx-param.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-tx</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-tx.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-tx-param</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-tx-param.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-xa</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-xa.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>whitebox-xa-param</artifactId>
                                    <type>rar</type>
                                    <outputDirectory>${whitebox.directory}</outputDirectory>
                                    <destFileName>whitebox-xa-param.rar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>common</artifactId>
                                    <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                    <destFileName>common.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-derby</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${derby.zip.url}</url>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipConfig}</skip>
                    <unpack>true</unpack>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-derby-to-payara</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <target>
                                <move todir="${payara.home}${file.separator}javadb">
                                    <fileset
                                            dir="${project.build.directory}${file.separator}db-derby-${derby.version}-bin"/>
                                </move>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbytools.jar"
                                      todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyclient.jar"
                                      todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                                <copy file="${payara.home}${file.separator}javadb${file.separator}lib${file.separator}derbyshared.jar"
                                      todir="${payara.home}${file.separator}glassfish${file.separator}domains${file.separator}domain1${file.separator}lib"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>start-database</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}startNetworkServer"
                                      spawn="true" dir="${payara.db.home}"/>
                                <echo message="Waiting 3 seconds for database in forked process to start..."/>
                                <sleep seconds="3"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-database</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}stopNetworkServer"
                                      dir="${payara.db.home}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Start Domain</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create jvm options</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-options</argument>
                                <argument>-Dj2eelogin.name=j2ee:-Dj2eelogin.password=j2ee:-Deislogin.name=cts1:-Deislogin.password=cts1</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create j2ee file user</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>staff:mgr</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>j2ee</argument>
                            </arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>Create javajoe file user</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>guest</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>javajoe</argument>        </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create cts-derby-pool Connection Pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>javax.sql.DataSource</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>org.apache.derby.jdbc.ClientDataSource</argument>
                                <argument>--property</argument>
                                <argument>databaseName=derbyDB:serverName=localhost:portNumber=1527:user=cts1:password=cts1:createDatabase=create</argument>
                                <argument>cts-derby-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create jdbc/DB1 resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-pool</argument>
                                <argument>jdbc/DB1</argument>        </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create cts-derby-XA-pool Connection Pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>javax.sql.XADataSource</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>org.apache.derby.jdbc.ClientXADataSource</argument>
                                <argument>--property</argument>
                                <argument>serverName=localhost:portNumber=1527:user=cts1:password=cts1:DatabaseName=derbyDB:connectionAttributes=";create\=true;"</argument>
                                <argument>--steadypoolsize</argument>
                                <argument>32</argument>
                                <argument>--maxpoolsize</argument>
                                <argument>64</argument>
                                <argument>cts-derby-XA-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/JDBCwhitebox-xa resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-XA-pool</argument>
                                <argument>eis/JDBCwhitebox-xa</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/JDBCwhitebox-notx resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>cts-derby-XA-pool</argument>
                                <argument>eis/JDBCwhitebox-notx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>List jdbc connection pools</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-jdbc-connection-pools</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Ping cts-derby-XA-pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>ping-connection-pool</argument>
                                <argument>cts-derby-XA-pool</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-tx.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-tx.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create connector-connection-pool whitebox-tx</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-tx</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-tx-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-tx resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-tx-pool.rar</argument>
                                <argument>eis/whitebox-tx</argument>        </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-xa.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-xa.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-xa connector-connection-pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-xa</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-xa-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-xa resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-xa-pool.rar</argument>
                                <argument>eis/whitebox-xa</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-notx.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-notx.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-notx connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-notx</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-notx-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-notx resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-notx-pool.rar</argument>
                                <argument>eis/whitebox-notx</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-mdcomplete.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-mdcomplete.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-mdcomplete connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-mdcomplete</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-mdcomplete-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-mdcomplete resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-mdcomplete-pool.rar</argument>
                                <argument>eis/whitebox-mdcomplete</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-anno_no_md.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-anno_no_md.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-anno_no_md connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-anno_no_md</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=cts1:userName=j2ee:password=cts1:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-anno_no_md-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-anno_no_md resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-anno_no_md-pool.rar</argument>
                                <argument>eis/whitebox-anno_no_md</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-mixedmode.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-mixedmode.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-mixedmode connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-mixedmode</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-mixedmode-pool.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-mixedmode resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-mixedmode-pool.rar</argument>
                                <argument>eis/whitebox-mixedmode</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-multianno.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-multianno.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-multianno connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-multianno</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-multianno.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-multianno resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-multianno.rar</argument>
                                <argument>eis/whitebox-multianno</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-tx-param.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-tx-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-tx-param connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-tx-param</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-tx-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-tx-param resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-tx-param.rar</argument>
                                <argument>eis/whitebox-tx-param</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-notx-param.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-notx-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-notx-param connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-notx-param</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-notx-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-notx-param resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-notx-param.rar</argument>
                                <argument>eis/whitebox-notx-param</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-xa-param.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-xa-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-xa-param connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-xa-param</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-xa-param.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-xa-param resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-xa-param.rar</argument>
                                <argument>eis/whitebox-xa-param</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Deploy whitebox-ibanno_no_md.rar</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>deploy</argument>
                                <argument>${whitebox.directory}/whitebox-ibanno_no_md.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create whitebox-ibanno_no_md connector connection pool</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-connection-pool</argument>
                                <argument>--raname</argument>
                                <argument>whitebox-ibanno_no_md</argument>
                                <argument>--property</argument>
                                <argument>eisPrincipalName=j2ee:userName=j2ee:password=j2ee:TSRValue=comp/TransactionSynchronizationRegistry</argument>
                                <argument>--connectiondefinition</argument>
                                <argument>com.sun.ts.tests.common.connector.whitebox.TSConnectionFactory</argument>
                                <argument>cts-connector-pool-whitebox-ibanno_no_md.rar</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create eis/whitebox-ibanno_no_md resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-connector-resource</argument>
                                <argument>--poolname</argument>
                                <argument>cts-connector-pool-whitebox-ibanno_no_md.rar</argument>
                                <argument>eis/whitebox-ibanno_no_md</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>List Connector Resources</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-connector-resources</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>List JNDI Entries</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-jndi-entries</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create jms/QueueConnectionFactory resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.QueueConnectionFactory</argument>
                                <argument>jms/QueueConnectionFactory</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create MDB_QUEUE resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MDB_QUEUE_REPLY</argument>
                                <argument>MDB_QUEUE</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Create MDB_QUEUE_REPLY resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>imqDestinationName=MDB_QUEUE_REPLY</argument>
                                <argument>MDB_QUEUE_REPLY</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Stop Domain</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <dependenciesToScan>jakarta.tck:connector</dependenciesToScan>

                    <systemPropertyVariables>
                        <payara.home>${payara.home}</payara.home>
                        <java.naming.factory.initial>com.sun.enterprise.naming.impl.SerialInitContextFactory</java.naming.factory.initial>
                        <ts.home>${project.basedir}/jakartaeetck</ts.home>
                        <project.basedir>${project.basedir}</project.basedir>
                        <j2eelogin.name>j2ee</j2eelogin.name>
                        <j2eelogin.password>j2ee</j2eelogin.password>
                        <eislogin.name>cts1</eislogin.name>
                        <eislogin.password>cts1</eislogin.password>
                        <debug>true</debug>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>javatest</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>connector-tests-javatest</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*Servlet*.*</include>
                                        <include>**/*Jsp**.*</include>
                                    </includes>

                                    <systemPropertyVariables>
                                        <arquillian.xml>arquillian.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>appclient</id>

            <dependencies>
                <dependency>
                    <groupId>jakarta.tck.arquillian</groupId>
                    <artifactId>arquillian-protocol-appclient</artifactId>
                </dependency>
                <dependency>
                    <groupId>jakarta.tck.arquillian</groupId>
                    <artifactId>arquillian-protocol-lib</artifactId>
                    <version>${jakarta.tck.arquillian.version}</version>
                </dependency>
                <dependency>
                    <groupId>jakarta.tck.arquillian</groupId>
                    <artifactId>tck-porting-lib</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>2-copy-lib</id>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <artifactItems>
                                        <!-- The application client container needs these two dependencies -->
                                        <artifactItem>
                                            <groupId>jakarta.tck.arquillian</groupId>
                                            <artifactId>tck-porting-lib</artifactId>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                            <destFileName>tck-porting-lib.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>jakarta.tck.arquillian</groupId>
                                            <artifactId>arquillian-protocol-lib</artifactId>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${glassfish.lib.dir}</outputDirectory>
                                            <destFileName>arquillian-protocol-lib.jar</destFileName>
                                        </artifactItem>

                                        <!--
                                            AppClientDeploymentPackager needs this on the Eclipse CI since it can't fully resolve
                                            jakarta.tck.arquillian:arquillian-protocol-lib in code for some reason.
                                        -->
                                        <artifactItem>
                                            <groupId>jakarta.tck.arquillian</groupId>
                                            <artifactId>arquillian-protocol-lib</artifactId>
                                            <!-- <version>${jakarta.tck.arquillian.version}</version> -->
                                            <type>jar</type>
                                            <overWrite>true</overWrite>
                                            <outputDirectory>${project.build.directory}/protocol</outputDirectory>
                                            <destFileName>protocol.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>connector-tests-appclient</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/*Ejb*Test.*</include>
                                    </includes>

                                    <systemPropertyVariables>
                                        <arquillian.xml>appclient-arquillian.xml</arquillian.xml>
                                    </systemPropertyVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
