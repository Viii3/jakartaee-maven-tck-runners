<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>integration-platform-tck</artifactId>

    <properties>
        <db.delimiter>;</db.delimiter>
        <derby.dataSource>org.apache.derby.jdbc.ClientDataSource</derby.dataSource>
        <derby.dbName>derbyDB</derby.dbName>
        <derby.home>${payara.home}/javadb</derby.home>
        <derby.passwd>cts1</derby.passwd>
        <derby.poolName>cts-derby-pool</derby.poolName>
        <derby.port>1527</derby.port>
        <derby.server>localhost</derby.server>
        <derby.user>cts1</derby.user>
        <payara.lib.dir>${payara.home}/glassfish/lib</payara.lib.dir>
        <jakarta.platform.version>11.0.0-RC1</jakarta.platform.version>
        <javadb.lib>${payara.home}/javadb/lib</javadb.lib>
        <jdbc.classpath>${javadb.lib}/derbyclient.jar${path.separator}${javadb.lib}/derbyshared.jar${path.separator}${javadb.lib}/derbytools.jar</jdbc.classpath>
        <jdbc.db>derby</jdbc.db>
        <jdbc.driver>org.apache.derby.jdbc.ClientDriver</jdbc.driver>
        <jdbc.driver.classes>${javadb.lib}/derbyclient.jar${path.separator}${javadb.lib}/derbyshared.jar${path.separator}${javadb.lib}/derbytools.jar</jdbc.driver.classes>
        <jdbc.password>cts1</jdbc.password>
        <jdbc.url>jdbc:derby://${derby.server}:${derby.port}/derbyDB;create=true</jdbc.url>
        <jdbc.user>cts1</jdbc.user>
        <sql.directory>./sql</sql.directory>
        <tck.artifactId>integration</tck.artifactId>
        <connection.attributes>"create=true"</connection.attributes>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>${tck.artifactId}</artifactId>
            <version>${jakarta.tck.platform.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.platform.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-appclient</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-javatest</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-api-maven</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.shrinkwrap.resolver</groupId>
                    <artifactId>shrinkwrap-resolver-spi-maven</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-common</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>arquillian-protocol-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck.arquillian</groupId>
            <artifactId>tck-porting-lib</artifactId>
            <version>${jakarta.tck.arquillian.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>common</artifactId>
            <version>${jakarta.tck.common.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>persistence-platform-tck-dbprocedures</artifactId>
            <version>11.0.0-M14</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.persistence</groupId>
                    <artifactId>jakarta.persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyclient</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbytools</artifactId>
            <version>${derby.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derbyshared</artifactId>
            <version>${derby.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>download-derby</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>${derby.zip.url}</url>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipTests}</skip>
                    <unpack>true</unpack>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <id>003-copy-protocol-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <version>${jakarta.tck.arquillian.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/protocol</outputDirectory>
                                    <destFileName>protocol.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>004-copy-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>common</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>common.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>tck-porting-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>tck-porting-lib.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>${tck.artifactId}</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>integration-tck.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derbyclient</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${payara.lib.dir}</outputDirectory>
                                    <destFileName>derbyclient.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derbytools</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${payara.lib.dir}</outputDirectory>
                                    <destFileName>derbytools.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derbyshared</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${payara.lib.dir}</outputDirectory>
                                    <destFileName>derbyshared.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>jakarta.tck.arquillian</groupId>
                                    <artifactId>arquillian-protocol-lib</artifactId>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                    <destFileName>arquillian-protocol-lib.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-certificates</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>common</artifactId>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}</outputDirectory>
                                    <includes>**/**cts_cert,**/**clientcert.jks,**/**clientcert.p12</includes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>postboot-00</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-01</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.protocols.protocol.http-listener-1.http.trace-enabled=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-02</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.network-listeners.network-listener.http-listener-2.enabled=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-03</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.network-listeners.network-listener.http-listener-2.port=1044</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-04</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>server-config.network-config.network-listeners.network-listener.http-listener-1.port=8080</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-05</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>guest</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/javajoe.pass</argument>
                                <argument>javajoe</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-06</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>staff:mgr</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.basedir}/j2ee.pass</argument>
                                <argument>j2ee</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-07</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-connection-pool</argument>
                                <argument>--restype</argument>
                                <argument>javax.sql.DataSource</argument>
                                <argument>--datasourceclassname</argument>
                                <argument>${derby.dataSource}</argument>
                                <argument>--property</argument>
                                <argument>DatabaseName=${derby.dbName}:serverName=${derby.server}:portNumber=${derby.port}:user=${derby.user}:password=${derby.passwd}:connectionAttributes=${connection.attributes}</argument>
                                <argument>--steadypoolsize</argument>
                                <argument>32</argument>
                                <argument>--maxpoolsize</argument>
                                <argument>64</argument>
                                <argument>${derby.poolName}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-08</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jdbc-resource</argument>
                                <argument>--connectionpoolid</argument>
                                <argument>${derby.poolName}</argument>
                                <argument>jdbc/DB1</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-09</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-jdbc-connection-pools</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-10</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-jdbc-resources</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-11</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>list-file-users</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>postboot-12</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>004-copy-derby</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target unless="skip.setup">
                                <move todir="${payara.home}${file.separator}javadb">
                                    <fileset dir="${project.build.directory}${file.separator}db-derby-${derby.version}-bin"/>
                                </move>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>15-start-database</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}startNetworkServer${script.extension}" spawn="true" dir="${payara.db.home}"/>
                                <echo message="Waiting 3 seconds for database in forked process to start..."/>
                                <sleep seconds="3"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>005-initdb</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target>
                                <path id="jdbc.classpath">
                                    <pathelement path="${jdbc.driver.classes}" />
                                    <path refid="maven.runtime.classpath" />
                                </path>
                                <sql autocommit="true" classpathref="jdbc.classpath" delimiter="${db.delimiter}" driver="${jdbc.driver}" onerror="continue" password="${jdbc.password}" url="${jdbc.url}" userid="${jdbc.user}">
                                    <transaction src="${sql.directory}/${jdbc.db}/${jdbc.db}.ddl.sql" />
                                    <!-- <transaction src="${sql.directory}/${jdbc.db}/${jdbc.db}.dml.sql"></transaction> -->
                                </sql>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-database</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <exec executable="${payara.db.home}${file.separator}bin${file.separator}stopNetworkServer${script.extension}" spawn="true" dir="${payara.db.home}"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.5.3</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-tests-javatest</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>-Djava.protocol.handler.pkgs=javax.net.ssl
                                -Djavax.net.ssl.keyStore=${project.build.directory}/certificates/clientcert.p12
                                -Djavax.net.ssl.keyStorePassword=changeit
                                -Djavax.net.ssl.trustStore=${payara.home}/glassfish/domains/domain1/config/cacerts.p12</argLine>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${javadb.lib}/derbytools.jar</additionalClasspathElement>
                                <additionalClasspathElement>${javadb.lib}/derbyclient.jar</additionalClasspathElement>
                                <additionalClasspathElement>${javadb.lib}/derbyshared.jar</additionalClasspathElement>
                                <additionalClasspathElement>${javadb.lib}/derby.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}/glassfish/modules/security.jar</additionalClasspathElement>
                                <additionalClasspathElement>${payara.home}/glassfish/modules/security-ee.jar</additionalClasspathElement>
                            </additionalClasspathElements>
                            <includes>
                                <include>com/sun/ts/tests/integration/**/*Test*.java</include>
                            </includes>
                            <!-- Select the @Tag("tck-javatest") tests -->
                            <groups>tck-javatest</groups>
                            <dependenciesToScan>jakarta.tck:${tck.artifactId}</dependenciesToScan>
                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <junit.log.traceflag>true</junit.log.traceflag>
                                <harness.log.traceflag>true</harness.log.traceflag>
                                <cts.harness.debug>true</cts.harness.debug>
                                <java.io.tmpdir>${root.tmp.directory}${path.separator}tmp</java.io.tmpdir>
                                <arquillian.xml>arquillian.xml</arquillian.xml>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <connection.attributes>\"create=true\"</connection.attributes>
            </properties>
        </profile>
    </profiles>
</project>