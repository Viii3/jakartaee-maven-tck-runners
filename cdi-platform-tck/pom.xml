<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>fish.payara.jakarta.tests.tck</groupId>
        <artifactId>tck</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>cdi-platform-tck</artifactId>

    <properties>
        <maven.build.cache.enabled>false</maven.build.cache.enabled>

        <excluded.groups>se</excluded.groups>

        <commons-lang.version>2.6</commons-lang.version>
        <htmlunit.version>4.9.0</htmlunit.version>
        <testng.version>7.9.0</testng.version>

        <weld.version>6.0.1.Final</weld.version>
        <weld.api.version>6.0.Final</weld.api.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>fish.payara.api</groupId>
                <artifactId>payara-bom</artifactId>
                <version>${payara.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Jakarta EE APIs -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-el-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.el</groupId>
            <artifactId>jakarta.el-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.faces</groupId>
            <artifactId>jakarta.faces-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.transaction</groupId>
            <artifactId>jakarta.transaction-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.resource</groupId>
            <artifactId>jakarta.resource-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp</groupId>
            <artifactId>jakarta.servlet.jsp-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>${jakarta.tck.ws.rs.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Weld (CDI implementation) -->
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-api</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-spi</artifactId>
            <version>${weld.api.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core-impl</artifactId>
            <version>${weld.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld.module</groupId>
            <artifactId>weld-web</artifactId>
            <version>${weld.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            The TCK API is quite small and mostly contains the org.jboss.cdi.tck.api.Configuration interface
            for programmatically configuring the TCK with things such as "org.jboss.cdi.tck.testDataSource" which
            are set below using a system property.
        -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>cdi-tck-api</artifactId>
            <version>${jakarta.tck.cdi.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- The CDI EE TCK testsuite -->
        <dependency>
            <groupId>jakarta.tck</groupId>
            <artifactId>cdi-tck-ee-impl</artifactId>
            <version>${jakarta.tck.platform.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.expressly</groupId>
            <artifactId>expressly</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.htmlunit</groupId>
    		<artifactId>htmlunit</artifactId>
    		<version>${htmlunit.version}</version>
    		<scope>test</scope>
		</dependency>
        

        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-lite-extension-translator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-payara-server-for-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>start-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-Xmx-jvm-option</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jvm-option</argument>
                                <argument>-Xmx2048m</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-queue_test-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Queue</argument>
                                <argument>--property</argument>
                                <argument>Name=queue_test</argument>
                                <argument>queue_test</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-topic_test-jms-resource</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-jms-resource</argument>
                                <argument>--restype</argument>
                                <argument>jakarta.jms.Topic</argument>
                                <argument>--property</argument>
                                <argument>Name=topic_test</argument>
                                <argument>topic_test</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-enable-implicit-cdi</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>set</argument>
                                <argument>configs.config.server-config.cdi-service.enable-implicit-cdi=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-student-file-user</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>student</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.build.directory}/test-classes/password.txt</argument>
                                <argument>student</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-printer-file-user</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>printer</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.build.directory}/test-classes/password.txt</argument>
                                <argument>printer</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-alarm-file-user</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-file-user</argument>
                                <argument>--groups</argument>
                                <argument>student:alarm</argument>
                                <argument>--passwordfile</argument>
                                <argument>${project.build.directory}/test-classes/password.txt</argument>
                                <argument>alarm</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-cdiTckExcludeDummy-property</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-system-property</argument>
                                <argument>cdiTckExcludeDummy=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-loadAllOnStartup-property</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipConfig}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>create-system-property</argument>
                                <argument>glassfish.servlet.loadAllOnStartup=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-payara-server-after-config</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipServerStartStop}</skip>
                            <executable>${payara.asadmin}</executable>
                            <arguments>
                                <argument>stop-domain</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Disable annotation processor for test sources -->
                    <testCompilerArgument>-proc:none</testCompilerArgument>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependency/lib</outputDirectory>
                            <archive>
                                <manifest>
                                    <addClasspath>false</addClasspath>
                                </manifest>
                            </archive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Copy the TestNG suite file -->
                    <execution>
                        <id>copy-test-suites</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.tck</groupId>
                                    <artifactId>cdi-tck-ee-impl</artifactId>
                                    <version>${jakarta.tck.platform.version}</version>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>tck-tests.xml</includes>
                            <outputDirectory>target/suites</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>

                    <!-- Install a jar with a few amount of test classes, for which some of the tests are looking -->
                    <execution>
                        <id>install-cdi-tck-ext-lib</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>jakarta.enterprise</groupId>
                                    <artifactId>cdi-tck-ext-lib</artifactId>
                                    <version>${jakarta.tck.cdi.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${payara.home}/glassfish/domains/domain1/lib/applibs</outputDirectory>
                                    <destFileName>cdi-tck-ext-lib.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>run ee tck</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <argLine>-Xmx2048m</argLine>
                            <!-- Surefire / TestNG Properties -->
                            <!-- The suite, the exclude and the test dependencies together determine which tests are being run -->
                            <suiteXmlFiles>
                                <suiteXmlFile>target/suites/tck-tests.xml</suiteXmlFile>
                            </suiteXmlFiles>
                            <excludedGroups>${excluded.groups}</excludedGroups>
                            <dependenciesToScan>
                                <dependency>jakarta.tck:cdi-tck-ee-impl</dependency>
                            </dependenciesToScan>
                            
                            <properties>
                                <property>
                                    <name>surefire.testng.verbose</name>
                                    <value>1</value>
                                </property>
                            </properties>
                            <forkCount>1</forkCount>
                            <reuseForks>true</reuseForks>
                            
                            <!-- System Properties -->
                            <systemPropertyVariables>
                                <payara.home>${payara.home}</payara.home>
                                <libPath>${project.build.outputDirectory}</libPath>
                                <org.jboss.cdi.tck.libraryDirectory>${project.build.directory}/dependency/lib</org.jboss.cdi.tck.libraryDirectory>
                                <debugMode>true</debugMode>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <reportsDirectories>${project.build.directory}/failsafe-reports/junitreports</reportsDirectories>
                    <outputDirectory>${project.build.directory}/surefire-reports</outputDirectory>
                    <outputName>test-report</outputName>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-test-report</id>
                        <goals>
                            <goal>report-only</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>web</id>
            <properties>
                <excluded.groups>javaee-full,se</excluded.groups>
            </properties>
        </profile>
    </profiles>

</project>
